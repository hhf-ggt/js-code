// 0 1 2 3 4
// 0 1 2 3 
// 1 1 1 1
// 1 2 1
// 1 1 2
// 2 1 1
// 2 2

// 一步之能上一个台阶 或者两个台阶、那么 如果要上n阶台阶的话、只有两种可能就是从n-1台阶上一个台阶上来、或者就是从n-2个台阶上两个台阶上来
// 所以可以根据递归的方法去解决、但是递归容易爆栈、不需要存储那么多的次数、只需要存储前两次即可、递归还需要注意退出的条件
// 斐波那契数列也是同样的解决方式

function index (n) {
  if (n <= 2) {
    return n;
  }

  return index(n - 1) + index(n -2);
}

console.log(index(4));